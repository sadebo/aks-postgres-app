name: Provision Infra + Build & Deploy App

on:
  push:
    branches:
    - main
    paths:
    - 'terraform/**'
    - 'app/**'
    - 'manifests/**'
    - '.github/workflows/deploy.yaml'
  workflow_dispatch:


jobs:
  infra:
    name: Provision Infrastructure
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.7

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Export ARM env
      run: |
        echo "ARM_CLIENT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform -chdir=terraform init -input=false

    - name: Terraform Apply
      run: terraform -chdir=terraform apply -auto-approve

  build:
    name: Build & Deploy Flask App
    runs-on: ubuntu-latest
    needs: infra # ðŸ‘ˆ ensures infra runs first

    steps:
    - uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Export ARM env
      run: |
        echo "ARM_CLIENT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}" >> $GITHUB_ENV

    - name: ACR Login
      run: az acr login --name parallelacr987601

    - name: Build & Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./app
        push: true
        tags: parallelacr987601.azurecr.io/flask-app:${{ github.sha }}

    - name: Update manifests with new image tag
      run: |
        sed -i "s|image: .*|image: parallelacr987601.azurecr.io/flask-app:${{ github.sha }}|" manifests/base/deployment.yaml
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git add manifests/base/deployment.yaml
        git commit -m "Update flask-app image to ${{ github.sha }}"
        git push

    - name: Get AKS Credentials
      run: az aks get-credentials --resource-group rg-aks-postgres --name aks-postgres-cluster --overwrite-existing

    - name: Verify TLS secrets
      run: |
        kubectl get secret argocd-tls -n argocd || exit 1
        kubectl get secret flask-tls -n dev || exit 1

    - name: Smoke test Flask healthz
      run: curl -vk https://flask.example.com/healthz
