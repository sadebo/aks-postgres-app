name: Provision AKS + Deploy App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose deployment environment"
        required: true
        default: "dev"
        type: choice
        options: [ dev, test, prod ]
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  infra:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Export ARM_* env vars
      run: |
        echo "ARM_CLIENT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform -chdir=terraform init -input=false

    - name: Terraform Apply
      run: terraform -chdir=terraform apply -auto-approve

    - name: Save kubeconfig
      run: |
        terraform -chdir=terraform output -raw kube_config > kubeconfig.yaml
        echo "KUBECONFIG=$(pwd)/kubeconfig.yaml" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: infra
    steps:
    - uses: actions/checkout@v3

    - name: Azure Login (for ACR)
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Container Registry Login
      run: az acr login --name parallelacr2901

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./app
        push: true
        tags: parallelacr2901.azurecr.io/flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3

    - name: Azure Login (for kubectl)
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest

    - name: Deploy App + Postgres (Kustomize Overlay)
      run: |
        ENVIRONMENT=${{ github.event.inputs.environment || 'dev' }}
        echo "Deploying environment: $ENVIRONMENT"
        kubectl apply -k k8s/overlays/$ENVIRONMENT
